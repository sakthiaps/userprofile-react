[{"/Users/sakthiaps/code/evaluation_front_end/src/reportWebVitals.js":"1","/Users/sakthiaps/code/evaluation_front_end/src/index.js":"2","/Users/sakthiaps/code/evaluation_front_end/src/App.js":"3","/Users/sakthiaps/code/evaluation_front_end/src/NavMenu.js":"4","/Users/sakthiaps/code/evaluation_front_end/src/Components/Login.js":"5","/Users/sakthiaps/code/evaluation_front_end/src/Components/Signup.js":"6","/Users/sakthiaps/code/evaluation_front_end/src/Components/Profile.js":"7"},{"size":362,"mtime":1610641545941,"results":"8","hashOfConfig":"9"},{"size":500,"mtime":1610641545941,"results":"10","hashOfConfig":"9"},{"size":794,"mtime":1610697585406,"results":"11","hashOfConfig":"9"},{"size":1395,"mtime":1610697912684,"results":"12","hashOfConfig":"9"},{"size":2970,"mtime":1610699175634,"results":"13","hashOfConfig":"9"},{"size":3412,"mtime":1610699345947,"results":"14","hashOfConfig":"9"},{"size":5490,"mtime":1610699535335,"results":"15","hashOfConfig":"9"},{"filePath":"16","messages":"17","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"mizz8",{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"22","messages":"23","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"24","messages":"25","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":1,"source":null},"/Users/sakthiaps/code/evaluation_front_end/src/reportWebVitals.js",[],"/Users/sakthiaps/code/evaluation_front_end/src/index.js",[],"/Users/sakthiaps/code/evaluation_front_end/src/App.js",["31","32"],"/Users/sakthiaps/code/evaluation_front_end/src/NavMenu.js",["33","34"],"/Users/sakthiaps/code/evaluation_front_end/src/Components/Login.js",["35","36"],"/Users/sakthiaps/code/evaluation_front_end/src/Components/Signup.js",["37","38"],"import React, { Component } from 'react'\nimport {Card, Row, Container, Button} from 'react-bootstrap';\n\n\nexport default class Signup extends Component{\n    constructor(props){\n    super(props)\n      this.state = {\n        email: \"\",\n        password: \"\",\n        password_confirmation: \"\"\n      };\n    }\n\n\n    handleEmail = (event) => {\n      this.setState({\n        email: event.target.value\n      })\n    }\n\n    handlePassword = (event) => {\n      this.setState({\n        password: event.target.value\n      })\n    }\n\n    handlePasswordConfirmation = (event) => {\n      this.setState({\n        password_confirmation: event.target.value\n      })\n    }\n\n    handleSubmit = () => {\n\n      if(this.state.password_confirmation !== this.state.password){\n        window.alert(\"Password & Password confirmation should be same\")\n        return\n      }\n      const requestOptions = {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/json' },\n        body: JSON.stringify({user: { email: this.state.email, password: this.state.password, password_confirmation: this.state.password_confirmation }})\n      };\n\n      fetch('http://localhost:3100/' + 'users/signup', requestOptions)\n      .then(response => response.json())\n      .then(data => {\n        if(data.status == 200){\n          window.location.href = \"/login\"\n        } else {\n          window.alert(data.error)\n        }\n      })\n    }\n\n\n   render(){\n        return(\n          <div>\n              <Container>\n                <Row>\n                  <div className=\"col-sm-9 col-md-7 col-lg-5 mx-auto\">\n                    <Card className=\"card my-5\" style={{marginTop: \"10%\", border: \"0\", borderRadius: \"1rem\", boxShadow: \"0 0.5rem 1rem 0 rgba(0, 0, 0, 0.1)\" }}>\n                      <Card.Body style={{padding: \"2rem\"}}>\n                        <Card.Title><h5 className=\"text-center\">Sign Up</h5></Card.Title>\n\n                          <div className=\"form-label-group\">\n                            <label htmlFor=\"email\" className=\"float-left\">Email</label>\n                            <input type=\"email\" id=\"email\" className=\"form-control email\" onChange={this.handleEmail} placeholder=\"Enter Email\" />\n                          </div>\n\n                          <div className=\"form-label-group mt-2\">\n                            <label className=\"float-left\" htmlFor=\"inputPassword\">Password</label>\n                            <input type=\"password\" id=\"inputPassword\" className=\"form-control password\" placeholder=\"Password\" onChange={this.handlePassword} />\n                          </div>\n\n                          <div className=\"form-label-group mt-2\">\n                            <label className=\"float-left\" htmlFor=\"inputPasswordConfirmation\">Password Confirmation</label>\n                            <input type=\"password\" id=\"inputPasswordConfirmation\" className=\"form-control password\" placeholder=\"Password Confirmation\" onChange={this.handlePasswordConfirmation} />\n                          </div>\n\n                          <div className=\"text-center mt-2\">\n                            <Button variant=\"primary\" className=\"text-center\" onClick={this.handleSubmit}>Sign Up</Button>\n                          </div>\n                      </Card.Body>\n\n                    </Card>\n                  </div>\n                </Row>\n\n              </Container>\n            {/* </div> */}\n          </div>\n        )\n    }\n}","/Users/sakthiaps/code/evaluation_front_end/src/Components/Profile.js",["39","40","41","42","43","44","45"],{"ruleId":"46","severity":1,"message":"47","line":1,"column":8,"nodeType":"48","messageId":"49","endLine":1,"endColumn":12},{"ruleId":"46","severity":1,"message":"50","line":4,"column":47,"nodeType":"48","messageId":"49","endLine":4,"endColumn":52},{"ruleId":"51","severity":1,"message":"52","line":25,"column":46,"nodeType":"53","messageId":"54","endLine":25,"endColumn":48},{"ruleId":"51","severity":1,"message":"52","line":25,"column":133,"nodeType":"53","messageId":"54","endLine":25,"endColumn":135},{"ruleId":"55","severity":1,"message":"56","line":45,"column":38,"nodeType":"53","messageId":"57","endLine":45,"endColumn":39},{"ruleId":"51","severity":1,"message":"52","line":49,"column":24,"nodeType":"53","messageId":"54","endLine":49,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":46,"column":38,"nodeType":"53","messageId":"57","endLine":46,"endColumn":39},{"ruleId":"51","severity":1,"message":"52","line":49,"column":24,"nodeType":"53","messageId":"54","endLine":49,"endColumn":26},{"ruleId":"46","severity":1,"message":"58","line":3,"column":10,"nodeType":"48","messageId":"49","endLine":3,"endColumn":24},{"ruleId":"46","severity":1,"message":"59","line":3,"column":26,"nodeType":"48","messageId":"49","endLine":3,"endColumn":31},{"ruleId":"55","severity":1,"message":"56","line":35,"column":38,"nodeType":"53","messageId":"57","endLine":35,"endColumn":39},{"ruleId":"60","severity":1,"message":"61","line":35,"column":72,"nodeType":"62","messageId":"63","endLine":35,"endColumn":73,"fix":"64"},{"ruleId":"51","severity":1,"message":"52","line":38,"column":24,"nodeType":"53","messageId":"54","endLine":38,"endColumn":26},{"ruleId":"55","severity":1,"message":"56","line":78,"column":38,"nodeType":"53","messageId":"57","endLine":78,"endColumn":39},{"ruleId":"51","severity":1,"message":"52","line":81,"column":24,"nodeType":"53","messageId":"54","endLine":81,"endColumn":26},"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","'Link1' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-useless-concat","Unexpected string concatenation of literals.","unexpectedConcat","'ToastContainer' is defined but never used.","'toast' is defined but never used.","dot-location","Expected dot to be on same line as property.","MemberExpression","expectedDotBeforeProperty",{"range":"65","text":"66"},[989,997],"\n      ."]